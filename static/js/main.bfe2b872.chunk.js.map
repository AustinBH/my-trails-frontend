{"version":3,"sources":["services/api.js","actions/userActions.js","components/auth/AuthForm.js","components/auth/ErrorModal.js","components/BasicLoader.js","containers/UserContainer.js","components/EditForm.js","components/EditAccount.js","components/auth/DeleteAccountModal.js","components/Account.js","actions/avatarActions.js","components/About.js","services/buttonSwitcher.js","components/buttons/FavButton.js","components/buttons/CompleteButton.js","components/InfoHolder.js","actions/completedHikeActions.js","actions/favoriteActions.js","components/commentModals/WriteCommentModal.js","components/commentModals/DeleteCommentModal.js","containers/CommentHolder.js","components/photoModals/AddPhotoModal.js","components/photoModals/DeletePhotoModal.js","components/PhotosHolder.js","containers/SearchData.js","containers/SearchResults.js","components/UserTrailInfo.js","components/Favorites.js","components/Trails.js","components/MapMarker.js","components/GoogleMap.js","components/TrailSearchForm.js","components/searchModals/SearchSettingsModal.js","components/Search.js","components/WelcomePage.js","containers/HomeContainer.js","App.js","reducers/manageUser.js","reducers/manageAvatars.js","reducers/manageFavorites.js","reducers/manageCompletedHikes.js","index.js"],"names":["API_ROOT","headers","Content-Type","Accept","Authorization","localStorage","getItem","api","auth","login","data","fetch","concat","method","body","JSON","stringify","then","res","json","signup","getCurrentUser","edit","deleteAccount","avatars","getAvatars","comments","getCommentsByTrail","trailId","addComment","editComment","deleteComment","completedHikes","getCompletedHikesByTrail","addCompletedHike","deleteCompletedHike","favorites","getFavoritesByTrail","addFavorite","deleteFavorite","photos","getPhotosByTrail","addPhoto","deletePhoto","locations","getLocations","trails","getTrailsByLocation","lat","long","distance","results","getTrailsById","path","join","fetchAuthentication","dispatch","type","payload","user","fetchLogin","userInfo","info","message","setItem","jwt","fetchSignup","error","AuthForm","props","capitalize","str","charAt","toUpperCase","slice","react_default","a","createElement","Grid","columns","Column","Form","size","className","onSubmit","ev","preventDefault","startFetch","form","name","Message","content","header","Segment","stacked","Field","Input","label","icon","iconPosition","value","username","onChange","handleOnChange","placeholder","autoComplete","required","password","Button","fluid","color","ErrorModal","Modal","onClose","toggle","open","closeIcon","Header","Content","Description","Actions","onClick","BasicLoader","Dimmer","active","Loader","UserContainer","state","isLoading","handleChange","action","target","parentNode","_this","setState","Object","defineProperty","objectSpread","toggleOpen","clearError","_this2","this","Fragment","Image","src","alt","auth_ErrorModal","components_BasicLoader","react_router_dom","react_router","exact","render","auth_AuthForm","assign","as","NavLink","to","activeClassName","Component","connect","options","key","text","EditForm","handleOnSubmit","Group","widths","newPassword","Label","Select","selection","map","avatar","id","img_url","Radio","checked","EditAccount","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","parseInt","new_password","avatar_id","fetchEdit","displayError","history","push","components_EditForm","DeleteAccountModal","_useState","useState","_useState2","slicedToArray","show","setShow","handleClose","onOpen","trigger","negative","style","display","pointing","inline","Account","deleteOpen","toggleModal","toggleAccountModal","logout","fetchAvatars","auth_DeleteAccountModal","components_EditAccount","About","Container","textAlign","dividing","Icon","circular","title","frameBorder","allow","allowFullScreen","href","rel","buttonSwitcher","button","favorite","trail_id","user_id","includes","like","children","complete","completed_hike","FavButton","event","handleOnClick","trail","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","likes","Symbol","iterator","next","done","err","return","CompleteButton","completed_hikes","InfoHolder","placeholders","displayFavorites","favs","length","displayCompletions","completions","fetchCompletedHikes","fetchFavorites","removeCompletedHikes","removeFavorites","celled","Row","width","imgMedium","Math","floor","random","summary","location","ascent","conditionStatus","conditionDetails","difficulty","NewCommentModal","control","TextArea","DeleteCommentModal","CommentHolder","editOpen","editingContent","editingId","deletingId","fetchTrailComments","toggleNew","toggleEdit","comment","toggleDelete","filter","element","toConsumableArray","updatedComment","currentComments","convertTime","time","Date","toLocaleString","prevProps","Comment","idx","Avatar","Author","Metadata","created_at","Text","commentModals_DeleteCommentModal","WriteCommentModal","AddPhotoModal","loading","accept","image","PhotosHolder","deletingImage","photoUrl","newLoading","fetchTrailPhotos","photoFileName","files","reader","FileReader","readAsDataURL","onload","photoFile","result","photo_file","photo_file_name","photo","rounded","DeletePhotoModal","photoModals_AddPhotoModal","SearchData","Table","striped","HeaderCell","Body","Cell","buttons_FavButton","handleClick","buttons_CompleteButton","component","hidden","find","components_PhotosHolder","components_InfoHolder","containers_CommentHolder","displayMore","SearchResults","response","window","scrollTo","containers_SearchData","UserTrailInfo","fetchLikedTrails","fetchCompletedTrails","hikes","containers_SearchResults","Favorites","components_UserTrailInfo","Trails","MapMarker","selectedTrail","current","$hover","Card","zIndex","maxHeight","cursor","float","Meta","conditionDate","GoogleMap","showingInfoWindow","selectedTrailId","onMarkerClick","e","onMapClicked","displayTrails","components_MapMarker","latitude","lng","longitude","margin","height","lib_default","bootstrapURLKeys","process","defaultZoom","defaultCenter","parseFloat","defaultProps","TrailSearchForm","SearchSettingsModal","range","Search","selectedLocation","mapLoading","lon","_this3","Dropdown","searchModals_SearchSettingsModal","components_TrailSearchForm","components_GoogleMap","setTrails","_useState3","_useState4","setLoading","_useState5","_useState6","setLat","_useState7","_useState8","setLong","_useState9","_useState10","setDistance","_useState11","_useState12","setResults","_useState13","_useState14","setOpen","_useState15","_useState16","warningOpen","setWarningOpen","_useState17","_useState18","setError","logPostition","position","coords","positionError","useEffect","searchDistance","searchResults","navigator","geolocation","getCurrentPosition","Item","Menu","fixed","item","direction","WelcomePage","components_Account","components_About","components_Favorites","components_Trails","components_Search","from","App","containers_HomeContainer","containers_UserContainer","initialState","manageUser","arguments","clear","manageAvatars","manageFavorites","manageCompletedHikes","rootReducer","combineReducers","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","ReactDOM","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.bfe2b872.chunk.js","sourcesContent":["const API_ROOT = 'https://my-trails-backend.herokuapp.com/api/v1'\n\nconst headers = () => {return {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n    'Authorization': localStorage.getItem('token')\n}}\n\nconst signup = data => {\n    return fetch(`${API_ROOT}/users`, {\n        method: 'POST',\n        headers: headers(),\n        body: JSON.stringify(data)\n    }).then(res => res.json())\n}\n\nconst login = data => {\n    return fetch(`${API_ROOT}/login`, {\n        method: 'POST',\n        headers: headers(),\n        body: JSON.stringify(data)\n    }).then(res => res.json())\n}\n\nconst getCurrentUser = () => {\n    return fetch(`${API_ROOT}/account`, {\n        method: 'GET',\n        headers: headers()\n    }).then(res => res.json())\n}\n\nconst edit = data => {\n    return fetch(`${API_ROOT}/account`, {\n        method: 'PATCH',\n        headers: headers(),\n        body: JSON.stringify(data)\n    }).then(res => res.json())\n}\n\nconst deleteAccount = data => {\n    return fetch(`${API_ROOT}/account`, {\n        method: 'DELETE',\n        headers: headers(),\n        body: JSON.stringify(data)\n    }).then(res => res.json())\n}\n\nconst getAvatars = () => {\n    return fetch(`${API_ROOT}/avatars`, {\n        method: 'GET',\n        headers: headers()\n    }).then(res => res.json())\n}\n\nconst getLocations = () => {\n    return fetch(`${API_ROOT}/locations`, {\n        method: 'GET',\n        headers: headers()\n    }).then(res => res.json())\n}\n\nconst getCommentsByTrail = (trailId) => {\n    return fetch(`${API_ROOT}/comments?trail_id=${trailId}`, {\n        headers: headers()\n    }).then(res => res.json())\n}\n\nconst addComment = (data) => {\n    return fetch (`${API_ROOT}/comments`, {\n        method: 'POST',\n        headers: headers(),\n        body: JSON.stringify(data)\n    }).then(res => res.json())\n}\n\nconst editComment = (data) => {\n    return fetch (`${API_ROOT}/comments`, {\n        method: 'PATCH',\n        headers: headers(),\n        body: JSON.stringify(data)\n    }).then(res => res.json())\n}\n\nconst deleteComment = (data) => {\n    return fetch (`${API_ROOT}/comments`, {\n        method: 'DELETE',\n        headers: headers(),\n        body: JSON.stringify(data)\n    }).then(res => res.json())\n}\n\nconst getTrailsByLocation = (lat, long, distance, results) => {\n    return fetch(`${API_ROOT}/trails-by-location?lat=${lat}&lon=${long}&distance=${distance}&results=${results}`, {\n        method: 'GET',\n        headers: headers()\n    })\n    .then(res => res.json())\n}\n\nconst getTrailsById = (data) => {\n    let path = `${API_ROOT}/trails-by-ids?ids=${data.join(',')}`\n    return fetch(path, {\n        method: 'GET',\n        headers: headers()\n    }).then(res => res.json())\n}\n\nconst getFavoritesByTrail = (data) => {\n    return fetch(`${API_ROOT}/likes?trail_id=${data}`, {\n        method: 'GET',\n        headers: headers()\n    }).then(res => res.json())\n}\n\nconst addFavorite = (data) => {\n    return fetch (`${API_ROOT}/likes`, {\n        method: 'POST',\n        headers: headers(),\n        body: JSON.stringify(data)\n    }).then(res => res.json())\n}\n\nconst deleteFavorite = (data) => {\n    return fetch(`${API_ROOT}/likes`, {\n        method: 'DELETE',\n        headers: headers(),\n        body: JSON.stringify(data)\n    }).then(res => res.json())\n}\n\nconst getCompletedHikesByTrail = (data) => {\n    return fetch(`${API_ROOT}/completed-hikes?trail_id=${data}`, {\n        method: 'GET',\n        headers: headers()\n    }).then(res => res.json())\n}\n\nconst addCompletedHike = (data) => {\n    return fetch (`${API_ROOT}/completed-hikes`,{\n        method: 'POST',\n        headers: headers(),\n        body: JSON.stringify(data)\n    }).then(res => res.json())\n}\n\nconst deleteCompletedHike = (data) => {\n    return fetch(`${API_ROOT}/completed-hikes`, {\n        method: 'DELETE',\n        headers: headers(),\n        body: JSON.stringify(data)\n    }).then(res => res.json())\n}\n\nconst getPhotosByTrail = (data) => {\n    return fetch(`${API_ROOT}/images?trail_id=${data}`, {\n        method: 'GET',\n        headers: headers()\n    }).then(res => res.json())\n}\n\nconst addPhoto = (data) => {\n    return fetch(`${API_ROOT}/images`, {\n        method: 'POST',\n        headers: headers(),\n        body: JSON.stringify(data)\n    }).then(res => res.json())\n}\nconst deletePhoto = (data) => {\n    return fetch(`${API_ROOT}/images`, {\n        method: 'DELETE',\n        headers: headers(),\n        body: JSON.stringify(data)\n    }).then(res => res.json())\n}\n\nexport const api = {\n    auth: {\n        login,\n        signup,\n        getCurrentUser,\n        edit,\n        deleteAccount\n    },\n    avatars: {\n        getAvatars\n    },\n    comments: {\n        getCommentsByTrail,\n        addComment,\n        editComment,\n        deleteComment\n    },\n    completedHikes: {\n        getCompletedHikesByTrail,\n        addCompletedHike,\n        deleteCompletedHike\n    },\n    favorites: {\n        getFavoritesByTrail,\n        addFavorite,\n        deleteFavorite\n    },\n    photos: {\n        getPhotosByTrail,\n        addPhoto,\n        deletePhoto\n    },\n    locations: {\n        getLocations\n    },\n    trails: {\n        getTrailsByLocation,\n        getTrailsById\n    }\n}","import { api } from '../services/api';\n\nexport const authenticateUser = (user) => {\n    return {\n        type: 'AUTHENTICATE',\n        payload: user\n    }\n}\n\nexport const fetchAuthentication = () => {\n    return (dispatch) => {\n        return api.auth.getCurrentUser().then(json => dispatch(authenticateUser(json.user)))\n    }\n    \n}\n\nexport const loginUser = info => {\n    if (!info.message) {\n        localStorage.setItem('token', info.jwt)\n        return {\n            type: 'LOGIN',\n            payload: info.user\n        }\n    } else {\n        return {\n            type: 'ERROR',\n            payload: info.message\n        }\n    }\n}\n\nexport const fetchLogin = (userInfo) => {\n    return (dispatch) => {\n        return api.auth.login({ user: userInfo }).then(json => {\n            return dispatch(loginUser(json))\n        })\n    }\n}\n\nexport const signupUser = info => {\n    if (info.jwt) {\n        localStorage.setItem('token', info.jwt)\n        return {\n            type: 'SIGNUP',\n            payload: info.user\n        }\n    } else {\n        return { \n            type: 'ERROR',\n            payload: info.error\n        }\n    }\n}\n\nexport const fetchSignup = (userInfo) => {\n    return (dispatch) => {\n       return api.auth.signup({ user: userInfo }).then(json => {\n            return dispatch(signupUser(json))\n        })\n    }\n}\n\nexport const editAccount = user => {\n    return {\n        type: 'EDIT',\n        payload: user\n    }\n}\n\nexport const fetchEdit = userInfo => {\n    return (dispatch) => {\n        return api.auth.edit({ user: userInfo }).then(json => {\n            return dispatch(editAccount(json))\n        })\n    }\n}","import React from 'react';\nimport { Form, Grid, Button, Segment, Message } from 'semantic-ui-react';\n\nconst AuthForm = props => {\n    // Here we have abstracted a login and signup form into 1 entity as a result we start a fetch based on previous props\n    const handleSubmit = ev => {\n        ev.preventDefault();\n        props.startFetch(props.form)\n    }\n\n    // This function allows us to have capitalized submit(login/signup) buttons\n    const capitalize = str => {\n        let first = str.charAt(0).toUpperCase()\n        return first + str.slice(1)\n    }\n\n    // Both of the following two functions will allow this form to be flexible depending on\n    // whether a user selects login or signup. It will also allow the form to remain fully controlled\n    const controlUsername = () => {\n        if (props.signup) {\n            return props.signup.username\n        } else {\n            return props.login.username\n        }\n    }\n\n    const controlPassword = () => {\n        if (props.signup) {\n            return props.signup.password\n        } else {\n            return props.login.password\n        }\n    }\n\n    return <Grid columns={1}>\n        <Grid.Column>\n            <Form size='large' className='standard-form' onSubmit={handleSubmit} name={props.form}>\n                <Message content={'Fill out the information below to ' + props.form} header={capitalize(props.form)} />\n                <Segment stacked>\n                    <Form.Field>\n                        <Form.Input label='Username' icon='user' iconPosition='left' type='text' value={controlUsername()} onChange={props.handleOnChange} name='username' placeholder='Enter your username' autoComplete='username' required />\n                    </Form.Field>\n                    <Form.Field>\n                        <Form.Input label='Password' icon='lock' iconPosition='left' type='password' value={controlPassword()} onChange={props.handleOnChange} name='password' autoComplete='current-password' required />\n                    </Form.Field>\n                <Button fluid icon='check' color='blue' type='submit' content={capitalize(props.form)} />\n                </Segment>\n            </Form>\n        </Grid.Column>\n    </Grid>\n}\n\nexport default AuthForm;","import React from 'react'\nimport { Modal, Button } from 'semantic-ui-react';\n\nconst ErrorModal = props => {\n\n    return <Modal onClose={props.toggle} open={props.open} closeIcon>\n        <Modal.Header>Error</Modal.Header>\n        <Modal.Content>\n            <Modal.Description>\n                {props.error}\n            </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n            <Button color='green' onClick={props.toggle} icon='check' content='Ok' />\n        </Modal.Actions>\n    </Modal>\n}\n\nexport default ErrorModal;","import React from 'react'\nimport { Segment, Dimmer, Loader } from 'semantic-ui-react';\n\nconst BasicLoader = props => {\n    return <div className='info-holder'>\n        <Segment className='info-loader'>\n            <Dimmer active>\n                <Loader>Getting {props.info}...</Loader>\n            </Dimmer>\n        </Segment>\n    </div> \n\n}\n\nexport default BasicLoader;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Image } from 'semantic-ui-react';\nimport { HashRouter as Router, Route, NavLink } from 'react-router-dom';\nimport { fetchSignup } from '../actions/userActions';\nimport { fetchLogin } from '../actions/userActions';\nimport AuthForm from '../components/auth/AuthForm';\nimport ErrorModal from '../components/auth/ErrorModal';\nimport BasicLoader from '../components/BasicLoader';\n\nclass UserContainer extends Component {\n    state = {\n        login: {\n            username: '',\n            password: ''\n        },\n        signup: {\n            username: '',\n            password: '',\n            distance: 20,\n            results: 20\n        },\n        isLoading: false\n    }\n\n    // This function will set the state based on user input allowing us to control a form found in a child component\n    handleChange = (ev, value) => {\n        let action = ev.target.parentNode.parentNode.parentNode.parentNode.parentNode.name\n        this.setState({\n            [action]: {\n                ...this.state[action], [value.name]: value.value\n            }\n        })\n    }\n\n    // This function will check to see which action we should perform and then either login or signup\n    startFetch = (str) => {\n        this.setState({isLoading: true})\n        str === 'login' ?\n        this.props.fetchLogin(this.state.login)\n        :\n        this.props.fetchSignup(this.state.signup)\n    }\n\n    // Adding state reset to clear loading indicator\n    toggleOpen = () => {\n        this.props.clearError()\n        this.setState({isLoading: false})\n    }\n\n    render() {\n        return <>\n            <h1>My Trails</h1>\n            <Image size='big' className='home-image' src='https://images.freeimages.com/images/large-previews/c27/mount-rainier-1337100.jpg' alt='mount-rainier' />\n            <ErrorModal error={this.props.error} open={!!this.props.error} toggle={this.toggleOpen} />\n            {this.state.isLoading ? \n                <BasicLoader info='account' />\n            :\n                null\n            }\n            <div className='auth-holder'>\n                <Router>\n                    <Route path='/login' exact render={props => <AuthForm {...props} startFetch={this.startFetch} login={this.state.login} form='login' handleOnChange={this.handleChange} />} />\n                    <Route path='/signup' exact render={props => <AuthForm {...props} startFetch={this.startFetch} signup={this.state.signup} form='signup' handleOnChange={this.handleChange} />} />\n                    <Button icon='sign-in' color='brown' as={NavLink} content='Login' exact to='/login' activeClassName='active' />\n                    <Button icon='user plus' color='brown' as={NavLink} content='Signup' exact to='/signup' activeClassName='active' />\n                </Router>\n            </div>\n        </>\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return { error: state.user.error }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    fetchLogin: (data) => dispatch(fetchLogin(data)),\n    fetchSignup: (data) => dispatch(fetchSignup(data)),\n    clearError: () => dispatch({ type: 'CLEARERROR' })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer);","import React from 'react'\nimport { Button, Form, Label, Image, Segment, Grid } from 'semantic-ui-react';\n\n// Here we are defining the search options\nconst options = [\n    { key: 10, text: 'Ten', value: 10 },\n    { key: 20, text: 'Twenty', value: 20 },\n    { key: 30, text: 'Thirty', value: 30 },\n    { key: 40, text: 'Fourty', value: 40 },\n    { key: 50, text: 'Fifty', value: 50 },\n]\n\nconst EditForm = props => {\n    return <Grid columns={1}>\n        <Grid.Column>\n            <Form className='standard-form' onSubmit={props.handleOnSubmit}>\n                <Segment stacked>\n                    <Form.Group widths='equal'>\n                        <Form.Field>\n                            <Form.Input icon='user' iconPosition='left' label='Username' type='text' value={props.user.username} onChange={props.handleOnChange} name='username' autoComplete='username' placeholder='Enter a new username' />\n                        </Form.Field>\n                        <Form.Field>\n                            <Form.Input icon='lock' iconPosition='left' label='Current Password' type='password' value={props.user.password} onChange={props.handleOnChange} name='password' autoComplete='current-password' placeholder='Enter your current password' required />\n                        </Form.Field>\n                        <Form.Field>\n                            <Form.Input icon='lock' iconPosition='left' label='New Password' type='password' value={props.user.newPassword} onChange={props.handleOnChange} name='newPassword' autoComplete='current-password' placeholder='Enter a new password' />\n                        </Form.Field>\n                    </Form.Group>\n                    <Form.Group widths='equal'>\n                        <Form.Field>\n                            <Label color='brown' as='a' icon='truck' content='Distance (miles)' />\n                            <Form.Select value={props.user.distance} onChange={props.handleOnChange} options={options} name='distance' placeholder='Select a range' selection />\n                        </Form.Field>\n                        <Form.Field>\n                            <Label color='brown' as='a' icon='map pin' content='Results' />\n                            <Form.Select value={props.user.results} onChange={props.handleOnChange} options={options} name='results' placeholder='Select the trails to be returned' selection />\n                        </Form.Field>\n                    </Form.Group>\n                    <Label color='brown' as='a' icon='image outline' content='Avatar' />\n                    <Form.Group>\n                        {props.avatars && props.avatars.map(avatar => {\n                            return <Form.Field key={avatar.id}>\n                                <Image src={avatar.img_url} avatar />\n                                <Form.Radio\n                                    name='avatar'\n                                    label={avatar.name}\n                                    value={avatar.id}\n                                    checked={props.user.avatar === avatar.id}\n                                    onChange={props.handleOnChange}\n                                />\n                            </Form.Field>\n                        })}\n                    </Form.Group>\n                    <Button fluid color='blue' type='submit' content='Edit' />\n                </Segment>\n            </Form>\n        </Grid.Column>\n    </Grid>\n}\n\nexport default EditForm;","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { fetchEdit } from '../actions/userActions';\nimport EditForm from './EditForm';\nimport { api } from '../services/api';\n\n\nclass EditAccount extends Component {\n    //Adding a fetch to pull current user information\n    constructor(){\n        super()\n        api.auth.getCurrentUser().then(json => this.setState({\n            username: json.user.username,\n            avatar: json.user.avatar.id,\n            distance: json.user.distance,\n            results: json.user.results\n        }))\n        this.state = {\n            username: '',\n            password: '',\n            newPassword: '',\n            avatar: '',\n            distance: '',\n            results: ''\n        }\n    }\n\n    // This function just controls our form and updates the state accordingly\n    // value is used with semantic ui to update the correct state as the event contains different information\n    handleChange = (ev, value) => {\n        this.setState({\n            [value.name]: value.value\n        })\n    }\n\n    // This function just manages the form submission and confirms whether a user has provided a new password or username and updates their account accordingly\n    // After a user's account is updated we redirect them back to the home page\n    handleSubmit = ev => {\n        ev.preventDefault()\n        let user = { username: this.state.username || this.props.user.username, password: this.state.password, distance: parseInt(this.state.distance) || this.props.user.distance, results: parseInt(this.state.results) || this.props.user.results}\n        let avatar = ''\n        // These if statements allow us to update the user's avatar if they changed it or keep it the same if they did not\n        if (this.state.avatar !== '' && this.state.avatar !== this.props.user.avatar.id) {\n            avatar = parseInt(this.state.avatar)\n        } else {\n            avatar = parseInt(this.props.user.avatar.id)\n        }\n        // We only want to move the user to the homepage if they successfully updated their info\n        if (!this.state.newPassword) {\n            user = {...user, avatar_id: avatar}\n            this.props.fetchEdit({ ...user }).then(action => {\n                if (!action.payload.error) {\n                    this.props.history.push('/')\n                } else {\n                    this.props.displayError(action.payload.error)\n                }\n            })\n        } else {\n            user = {...user, new_password: this.state.newPassword, avatar_id: avatar}\n            this.props.fetchEdit({...user}).then(action => {\n                if (!action.payload.error) {\n                    this.props.history.push('/')\n                } else {\n                    this.props.displayError(action.payload.error)\n                }\n            })\n        }\n    }\n\n    render() {\n        return <>\n            <h1>Edit My Account Info</h1>\n            {this.props.avatars ?\n                <EditForm user={{ ...this.state }} handleOnChange={this.handleChange} handleOnSubmit={this.handleSubmit} avatars={this.props.avatars} />\n            :\n                null\n            }\n        </>\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    fetchEdit: (data) => dispatch(fetchEdit(data))\n})\n\nexport default connect(null, mapDispatchToProps)(EditAccount);","import React, { useState } from 'react'\nimport { Modal, Button, Form, Label } from 'semantic-ui-react';\n\nconst DeleteAccountModal = props => {\n\n    // Adding hooks so that we can clear the secondary menu created when a user confirms they want to close their account\n    const [show, setShow] = useState(false)\n\n    const handleClose = () => {\n        setShow(false)\n        props.toggle()\n    }\n\n    return <Modal onClose={handleClose} onOpen={props.toggle} open={props.open} trigger={<Button className='account-button' negative content='Delete Account' icon='trash alternate' />} closeIcon>\n        <Modal.Header>Delete My Account</Modal.Header>\n        <Modal.Content>\n            <Modal.Description>\n                Are you sure?\n            </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n            <Button color='red' onClick={handleClose} icon='remove' content='No'/>\n            <Button color='green' onClick={() => setShow(!show)} icon='check' content='Yes'/>\n        </Modal.Actions>\n        {show ?\n            <Modal.Content>\n                <Modal.Description>\n                    <Form onSubmit={props.handleOnSubmit} className='standard-form' name='delete'>\n                        <Form.Field style={{display: 'none'}}>\n                            <Label pointing='below' color='brown' as='a' icon='user' content='Username' />\n                            <Form.Input type='text' value={props.username} onChange={props.handleOnChange} placeholder='Enter your username' autoComplete='current-username' name='username' />\n                        </Form.Field>\n                        <Form.Field inline className='modal-form'>\n                            <Label pointing='below' color='brown' as='a' icon='lock' content='Password' />\n                            <Form.Input type='password' value={props.password} onChange={props.handleOnChange} autoComplete='current-password' name='password' required />\n                        </Form.Field>\n                        <Button className='home-button' color='blue' type='submit' content='Delete Account' />\n                    </Form>\n                </Modal.Description>\n            </Modal.Content>\n            :\n            null\n        }\n    </Modal>\n}\n\nexport default DeleteAccountModal;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Image } from 'semantic-ui-react';\nimport { fetchAuthentication } from '../actions/userActions';\nimport { fetchAvatars } from '../actions/avatarActions';\nimport EditAccount from './EditAccount';\nimport BasicLoader from './BasicLoader';\nimport ErrorModal from './auth/ErrorModal';\nimport DeleteAccountModal from './auth/DeleteAccountModal';\nimport { api } from '../services/api';\n\nclass Account extends Component {\n\n    state = {\n        isLoading: true,\n        error: '',\n        open: false,\n        deleteOpen: false,\n        password: ''\n    }\n\n    // We just want to make sure that we get the user's account info and all available avatars (placeholder stage)\n    componentDidMount() {\n        this.props.fetchAuthentication().then(this.setState({isLoading: false}))\n        this.props.fetchAvatars()\n    }\n\n    toggleModal = () => {\n        this.setState({ open: !this.state.open })\n    }\n\n    // We need to fetch again so that we can display our welcome message and avatar image\n    displayError = error => {\n        this.setState({ error: error })\n        this.toggleModal()\n        this.props.fetchAuthentication()\n    }\n\n    toggleAccountModal = () => {\n        this.setState({ deleteOpen: !this.state.deleteOpen })\n    }\n\n    handleChange = ev => {\n        this.setState({\n            [ev.target.name]: ev.target.value\n        })\n    }\n\n    handleSubmit = ev => {\n        ev.preventDefault()\n        api.auth.deleteAccount({user: {password: this.state.password} }).then(json => {\n            this.toggleAccountModal()\n            if (json.error) {\n                this.displayError(json.error)\n            } else {\n                this.props.logout()\n            }\n        })\n    }\n\n    render() {\n        return <>\n            <h1>Account</h1>\n            {this.props.user && this.props.user.avatar && <Image src={this.props.user.avatar.img_url} avatar/>}\n            <p>Welcome back {this.props.user && this.props.user.username}!!</p>\n            <DeleteAccountModal open={this.state.deleteOpen} toggle={this.toggleAccountModal} handleOnChange={this.handleChange} handleOnSubmit={this.handleSubmit} />\n            {this.state.isLoading ? \n                <BasicLoader info='your info' />\n            :\n                <>\n                <ErrorModal error={this.state.error} open={this.state.open} toggle={this.toggleModal} />\n                <EditAccount displayError={this.displayError} user={this.props.user} history={this.props.history} avatars={this.props.avatars} />\n                </>\n            }\n            <Button color='brown' icon='backward' onClick={() => this.props.history.push('/')} content='Go Back' />\n        </>\n    }\n}\n\nconst mapStateToProps = state => {\n    return { user: state.user.user, avatars: state.avatars }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    fetchAuthentication: () => dispatch(fetchAuthentication()),\n    fetchAvatars: () => dispatch(fetchAvatars()),\n    logout: () => dispatch({ type: 'LOGOUT' })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Account);","import { api } from '../services/api';\n\nexport const getAvatars = (avatars) => {\n    return {\n        type: 'AVATARS',\n        payload: avatars\n    }\n}\n\nexport const fetchAvatars = () => {\n    return (dispatch) => {\n        return api.avatars.getAvatars().then(json => dispatch(getAvatars(json)))\n    }\n}","import React from 'react'\nimport { Container, Segment, Header, Button, Icon } from 'semantic-ui-react';\n\nconst About = props => {\n    return <Container textAlign='center'>\n        <Header as='h1' content='About'/>\n        <Segment stacked>\n            <Header dividing as='h3' icon textAlign='center'>\n                <Icon name='map signs' circular />\n                <Header.Content>My Trails</Header.Content>\n            </Header>\n            This application was created to be used by hiking enthusiasts and anyone who wants to experience any amount of nature.\n            As someone who has grown up in the Pacific Northwest I have been very fortunate to experience quite a bit of hiking and backpacking.\n            Hopefully this application will allow you to get out there and share your experiences with others.\n            <Header dividing as='h3' icon textAlign='center' >\n                <Icon name='street view' circular />\n                <Header.Content>How to use the app</Header.Content>\n            </Header>\n            This is a mobile/webapp for hikers.\n            You can save trails as favorites, mark trails as completed, comment on trails, upload photos of trails, and see specific trail information such as difficulty, length, ascent, a brief summary, and a preview image.\n            You can search for trails based on latitude/longitude gps coordinates, several different preset locations, and your device's geolocation feature.\n            <iframe className='demo-video' title='My Trails Demo' src=\"https://www.youtube.com/embed/P2BzlqXCFZU\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen/>\n        </Segment>\n        <Header as='h3' content='Features'/>\n        <Segment stacked>\n            <Header dividing as='h3' icon textAlign='center'>\n                <Icon name='user' circular />\n                <Header.Content>Account</Header.Content>\n            </Header>\n            On this page you can change your account information.\n            You can update your username, password, avatar, and your search preferences.\n            You can specify the range in miles that you want to search for trails as well as the number of trails you want to see.\n            <Header dividing as='h3' icon textAlign='center'>\n                <Icon name='heart' circular />\n                <Header.Content>Favs</Header.Content>\n            </Header>\n            Here you can find all of the trails that you have favorited.\n            You can view all comments and create, edit, and delete your comments.\n            You can also view the full trail information such as how many users have favorited and completed the trail.\n            All photos uploaded for this trail are also available from the photos button.\n            You can upload new photos or even delete your previous photos as well.\n            <Header dividing as='h3' icon textAlign='center'>\n                <Icon name='map' circular />\n                <Header.Content>Trails</Header.Content>\n            </Header>\n            This section displays all trails you have completed.\n            Like the Favs page you can view the comments, trail info, and photos associated with trails you have completed.\n            <Header dividing as='h3' icon textAlign='center'>\n                <Icon name='search' circular />\n                <Header.Content>Search</Header.Content>\n            </Header>\n            This section allows you to search for trails.\n            There are 54 total locations in the dropdown menu which will let you browse trails around these areas.\n            You can also use the settings button on this page to update your search settings.\n            The search by coordinates feature lets you input a specific latitude and longitude to see specific trail data.\n            Both of these types of search will display a map based on the coordinates you provide or location you select.\n            All of the trails will also be displayed below the map.\n            You can interact with these trails in the same manner as both the favs and trails pages.\n            <Header dividing as='h3' icon textAlign='center'>\n                <Icon name='home' circular />\n                <Header.Content>Home Page</Header.Content>\n            </Header>\n            The home page has a hikes near me! button which will let you see hikes near your location.\n            This feature requires that you have your location services turned on so that we can get trails based on the location of your device.\n            The settings button here functions like the same button on the search page.\n            You can specify your search settings if you want to modify your range or results.\n        </Segment>\n        <Header as='h3' content='Technologies' />\n        <Segment stacked>\n            <Header dividing as='h3' icon textAlign='center'>\n                <Icon name='react' circular />\n                <Header.Content>Frontend</Header.Content>\n            </Header>\n            The frontend of this application uses React.js, Redux.js, Redux Thunk, Google Maps API, Geolocation API, and Semantic UI.\n            The Geolocation API is a bit specific so if you are accessing this website from an http connection rather than https you will not be able to use the hikes near me! feature.\n            <Header dividing as='h3' icon textAlign='center'>\n                <Icon name='gem' circular />\n                <Header.Content>Backend</Header.Content>\n            </Header>\n            The backend of this application uses Rails, JWT, Hiking Project API, and AWS S3 image hosting.\n            The Hiking Project API is provided by REI's Hiking Project.\n            This is where the trail data is coming from.\n            Their API is very robust and easy to work with, it has been an absoloute pleasure to work with for this project.\n            The photos that are uploaded here are stored using AWS S3.\n        </Segment>\n        <Header as='h3' content='Contact' />\n        <Segment stacked>\n            <a href='https://github.com/AustinBH' target='_blank' rel='noopener noreferrer'>\n                <Button color='black' content='Github' icon='github' />\n            </a>\n            <a href='https://www.linkedin.com/in/austin-harlow/' target='_blank' rel='noopener noreferrer'>\n                <Button color='linkedin' content='Linkedin' icon='linkedin' />\n            </a>\n            <a href='https://dev.to/austinbh' target='_blank' rel='noopener noreferrer'>\n                <Button color='black' content='Blog' icon='list alternate outline' />\n            </a>\n        </Segment>\n        <Button className='home-button' color='brown' icon='backward' onClick={() => props.history.push('/')} content='Go Back' />\n    </Container>\n}\n\nexport default About;","import { api } from './api';\n\nexport const buttonSwitcher = (ev, data, props) => {\n    let button = ''\n    if (ev.target.name) {\n        button = ev.target\n    } else {\n        button = ev.target.parentNode\n    }\n    switch (button.name) {\n        case 'fav':\n            let favorite = { trail_id: data.id, user_id: props.user.id }\n            if (!button.className.includes('orange')) {\n                api.favorites.addFavorite({ like: favorite }).then(json => {\n                    if (!json.error && !json.message) {\n                        button.className = 'ui orange button'\n                        button.children[0].className='star icon'\n                    }\n                })\n            } else {\n                api.favorites.deleteFavorite({ like: favorite }).then(json => {\n                    if (!json.error) {\n                        button.className = 'ui button'\n                        button.children[0].className = 'star outline icon'\n                    }\n                })\n            }\n            return null\n        case 'complete':\n            let complete = { trail_id: data.id, user_id: props.user.id }\n            if (!button.className.includes('green')) {\n                api.completedHikes.addCompletedHike({ completed_hike: complete }).then(json => {\n                    if (!json.error && !json.message) {\n                        button.className = 'ui green button'\n                        button.children[0].className = 'check circle icon'\n                    }\n                })\n            } else {\n                api.completedHikes.deleteCompletedHike({ completed_hike: complete }).then(json => {\n                    if (!json.error) {\n                        button.className = 'ui button'\n                        button.children[0].className = 'check circle outline icon'\n                    }\n                })\n            }\n            return null\n        case 'comments':\n            return ['comment', data.id]\n        case 'info':\n            return ['info', data.id]\n        case 'photos':\n            return ['photo', data.id]\n        default:\n            return null\n    }\n}","import React from 'react';\nimport { Button } from 'semantic-ui-react';\n\nconst FavButton = props => {\n    let button = <Button name='fav' icon='star outline' content='Fav' onClick={(event) => props.handleOnClick(event, props.trail)} />\n    // Here we are checking to see if the user has liked a trail before so that we can color in the button\n    for (let like of props.user.likes) {\n        if (like.trail_id === props.trail.id)\n            button = <Button color='orange' name='fav' icon='star' content='Fav' onClick={(event) => props.handleOnClick(event, props.trail)} />\n    }\n    return button\n}\n\nexport default FavButton;","import React from 'react';\nimport { Button } from 'semantic-ui-react';\n\nconst CompleteButton = props => {\n    let button = <Button name='complete' icon='check circle outline' content='Complete' onClick={(event) => props.handleOnClick(event, props.trail)} />\n    // This for of statement is used to change the button's appearance based on whether they completed the trail or not\n    for (let completed of props.user.completed_hikes) {\n        if (completed.trail_id === props.trail.id)\n            button = <Button color='green' name='complete' icon='check circle' content='Complete' onClick={(event) => props.handleOnClick(event, props.trail)} />\n    }\n    return button\n}\n\nexport default CompleteButton;","import React, { Component } from 'react';\nimport { Grid, Label, Image } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { fetchCompletedHikes } from '../actions/completedHikeActions';\nimport { fetchFavorites } from '../actions/favoriteActions';\n\nclass InfoHolder extends Component {\n\n    // Adding some placeholder images for when there is no image for the trail\n    placeholders = [\n        <Image className='info-image' size='medium' src='https://placekitten.com/640/360' alt='trail placeholder' />,\n        <Image className='info-image' size='medium' src='https://placekitten.com/580/360' alt='trail placeholder' />,\n        <Image className='info-image' size='medium' src='https://placekitten.com/520/360' alt='trail placeholder' />,\n        <Image className='info-image' size='medium' src='https://placekitten.com/460/360' alt='trail placeholder' />,\n        <Image className='info-image' size='medium' src='https://placekitten.com/360/360' alt='trail placeholder' />\n    ]\n\n    capitalize = str => {\n        return str.charAt(0).toUpperCase() + str.slice(1)\n    }\n\n    // Converted this functional into a class component for lifecycle methods to fetch and remove completions + favs\n    componentDidMount() {\n        this.props.fetchCompletedHikes(this.props.trail.id)\n        this.props.fetchFavorites(this.props.trail.id)\n    }\n\n    // This function clears out the redux store for the next info query\n    componentWillUnmount() {\n        this.props.removeCompletedHikes()\n        this.props.removeFavorites()\n    }\n\n    // The following two functions are going to display our fav and completion counts\n    displayFavorites = () => {\n        let favs = this.props.favorites\n        if (favs) {\n            if (favs.length === 1) {\n                return `${favs.length} user has faved this trail!`\n            } else {\n                return `${favs.length} users have faved this trail!`\n            }\n        }\n    }\n\n    displayCompletions = () => {\n        let completions = this.props.completedHikes\n        if (completions) {\n            if (completions.length === 1) {\n                return `${completions.length} user has hiked this trail!`\n            } else {\n                return `${completions.length} users have hiked this trail!`\n            }\n        }\n    }\n\n    render() {\n        return <Grid columns={3} celled='internally'>\n            <Grid.Row>\n                <Grid.Column width={16}>\n                    {this.props.trail.imgMedium ?\n                        <Image className='info-image' size='medium' src={this.props.trail.imgMedium} alt={this.props.trail.name} />\n                        :\n                        this.placeholders[Math.floor(Math.random() * Math.floor(this.placeholders.length))]\n                    }\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column width={10}>\n                    <Label color='brown'>Summary</Label>\n                    <p>{this.props.trail.summary}</p>\n                </Grid.Column>\n                <Grid.Column width={6}>\n                    <Label color='brown'>Location</Label>\n                    <p>{this.props.trail.location}</p>\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column width={8}>\n                    <Label color='brown'>Completions</Label>\n                    <p>{this.displayCompletions()} </p>\n                </Grid.Column>\n                <Grid.Column width={8}>\n                    <Label color='brown'>Favs</Label>\n                    <p>{this.displayFavorites()} </p>\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column width={8}>\n                    <Label color='brown'>Length</Label>\n                    <p>{this.props.trail.length} miles</p>\n                </Grid.Column>\n                <Grid.Column width={8}>\n                    <Label color='brown'>Ascent</Label>\n                    <p>{this.props.trail.ascent} ft</p>\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column width={6}>\n                    <Label color='brown'>Condition</Label>\n                    <p>{this.props.trail.conditionStatus}</p>\n                </Grid.Column>\n                <Grid.Column width={10}>\n                    <Label color='brown'>Details</Label>\n                    <p>{this.props.trail.conditionDetails || 'No details available at this time'}</p>\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column width={7}>\n                    <Label color='brown'>Difficulty</Label>\n                    <p>{this.capitalize(this.props.trail.difficulty)}</p>\n                </Grid.Column>\n                <Grid.Column width={9}>\n                    <Label color='brown'>Difficulty Scale</Label>\n                    <p className='difficulty'>Green: Easy</p>\n                    <p className='difficulty'>Blue: Intermediate</p>\n                    <p className='difficulty'>Black: Difficult</p>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {completedHikes: state.completedHikes, favorites: state.favorites}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCompletedHikes: (data) => dispatch(fetchCompletedHikes(data)),\n    fetchFavorites: (data) => dispatch(fetchFavorites(data)),\n    removeCompletedHikes: () => dispatch({ type: 'DELETECOMPLETEDHIKES'}),\n    removeFavorites: () => dispatch({ type: 'DELETEFAVORITES'})\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoHolder);","import { api } from '../services/api';\n\nexport const getCompletedHikesByTrail = (completedHikes) => {\n    return {\n        type: 'GETCOMPLETEDHIKES',\n        payload: completedHikes\n    }\n}\n\nexport const fetchCompletedHikes = trail => {\n    return (dispatch) => {\n        return api.completedHikes.getCompletedHikesByTrail(trail).then(json => dispatch(getCompletedHikesByTrail(json)))\n    }\n}","import { api } from '../services/api';\n\nexport const getFavoritesByTrail = (favorites) => {\n    return {\n        type: 'GETFAVORITES',\n        payload: favorites\n    }\n}\n\nexport const fetchFavorites = trail => {\n    return (dispatch) => {\n        return api.favorites.getFavoritesByTrail(trail).then(json => dispatch(getFavoritesByTrail(json)))\n    }\n}","import React from 'react'\nimport { Modal, Button, Form, TextArea } from 'semantic-ui-react';\n\nconst NewCommentModal = props => {\n    return <Modal onOpen={props.toggle} onClose={() => props.toggle('')} open={props.open} trigger={ props.info === 'New' ? <Button icon='write' color='purple' content='New Comment' /> : null} closeIcon>\n        <Modal.Header>{props.info} Comment</Modal.Header>\n        <Modal.Content>\n            <Modal.Description>\n                <Form onSubmit={props.handleOnSubmit} className='standard-form' name={props.info}>\n                    <Form.Field label='Content' control={TextArea} value={props.value} onChange={props.handleOnChange} name={props.info === 'New' ? 'content' : 'editingContent'} placeholder='Add a new comment' required />\n                    <Button className='home-button' color='blue' type='submit' content='Add Comment' />\n                </Form>\n            </Modal.Description>\n        </Modal.Content>\n    </Modal>\n}\n\nexport default NewCommentModal;","import React from 'react'\nimport { Modal, Button } from 'semantic-ui-react';\n\nconst DeleteCommentModal = props => {\n    return <Modal onClose={props.toggle} open={props.open} closeIcon>\n        <Modal.Header>Delete Comment</Modal.Header>\n        <Modal.Content>\n            <Modal.Description>\n                Are you sure? \n            </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n            <Button color='red' onClick={props.toggle} icon='remove' content='No' />\n            <Button color='green' onClick={() => props.deleteComment(props.id)} icon='checkmark' content='Yes' />\n        </Modal.Actions>\n    </Modal>\n}\n\nexport default DeleteCommentModal;","import React, { Component } from 'react'\nimport { Button, Comment } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { api } from '../services/api';\nimport { fetchAuthentication } from '../actions/userActions'\nimport WriteCommentModal from '../components/commentModals/WriteCommentModal';\nimport DeleteCommentModal from '../components/commentModals/DeleteCommentModal';\nimport BasicLoader from '../components/BasicLoader';\n\n\nclass CommentHolder extends Component {\n\n    state = {\n        open: false,\n        editOpen: false,\n        deleteOpen: false,\n        comments: [],\n        content: '',\n        editingContent: '',\n        editingId: '',\n        deletingId: '',\n        isLoading: false\n        }\n\n    // Here we have to fetch the comments for a trail and fetch our user info incase someone has refreshed the page\n    componentDidMount() {\n        this.fetchTrailComments()\n        this.props.fetchAuthentication()\n    }\n\n    // We want to update the comments if a user selects a different trail\n    componentDidUpdate(prevProps) {\n        if (this.props.trail.id !== prevProps.trail.id) {\n            this.fetchTrailComments()\n        }\n    }\n\n    // This function adds a loading indicator while waiting to get comment information for a specific trail\n    fetchTrailComments = () => {\n        this.setState({ isLoading: true })\n        api.comments.getCommentsByTrail(this.props.trail.id).then(json => this.setState({ comments: json, isLoading: false }))\n    }\n\n    // This function allows us to control our new comment and edit comment forms\n    handleChange = ev => {\n        this.setState({\n            [ev.target.name]: ev.target.value\n        })\n    }\n\n    // This function toggles our new comment modal\n    toggleNew = () => this.setState({ open: !this.state.open })\n\n    // This function toggles the edit modal and adds a specific comment's information to the modal for editing.\n    toggleEdit = comment => this.setState({ editOpen: !this.state.editOpen, editingContent: comment.content, editingId: comment.id })\n\n    // This function toggles our delete comment modal\n    toggleDelete = comment => this.setState({ deleteOpen: !this.state.deleteOpen, deletingId: comment.id })\n\n    // This function deletes a user's comment and closes the delete modal\n    deleteComment = id => {\n        api.comments.deleteComment({id: id}).then(this.setState({ comments: this.state.comments.filter(element => element.id !== id), deletingId: '' }))\n        this.toggleDelete({id: ''})\n    }\n\n    // This function manages our edit and create forms and sends an appropriate fetch depending on what the user selected.\n    handleSubmit = ev => {\n        ev.preventDefault()\n        if (ev.target.name === 'New') {\n            let comment = { content: this.state.content, user_id: this.props.user.id, trail_id: this.props.trail.id }\n            api.comments.addComment({ comment: comment }).then(json => {\n                if (!json.error) {\n                    let comments = [...this.state.comments, json]\n                    this.setState({ comments, content: '' })\n                }\n            })\n            this.toggleNew()\n        } else {\n            let comment = { content: this.state.editingContent, id: this.state.editingId }\n            api.comments.editComment({ comment: comment }).then(json => {\n                if (!json.error) {\n                    let updatedComment = json\n                    let currentComments = [...this.state.comments.filter(comment => comment.id !== json.id), updatedComment]\n                    this.setState({ comments: currentComments })\n                }\n            })\n            this.toggleEdit('')\n        }\n    }\n\n    // This function will parse the date returned by our backend into local time for the user\n    convertTime = time  => {\n        const date = new Date(time)\n        return date.toLocaleString()\n    }\n\n    render() {\n        return <>\n            <Comment.Group>\n                { // Here we are using a ternary to add a placeholder while we fetch the comments\n                    this.state.isLoading ?\n                        <BasicLoader info='comments' />\n                :\n                    // This nested ternary allows us to either render a standard no comments yet message or the comments for a trail\n                    this.state.comments.length > 0 ? this.state.comments.map((comment, idx) => {\n                            return <Comment key={idx}>\n                                <Comment.Avatar src={comment.avatar} />\n                                <Comment.Author as='a' content={comment.username}/>\n                                <Comment.Metadata content={this.convertTime(comment.created_at)}/>\n                                <Comment.Text content={comment.content}/>\n                                {comment.user_id === this.props.user.id ?\n                                    <>\n                                        <Button size='mini' icon='edit' color='yellow' onClick={() => this.toggleEdit(comment)} content='Edit'/>\n                                        <Button size='mini' icon='trash alternate' negative onClick={() => this.toggleDelete(comment)} content='Delete'/>\n                                    </>\n                                :\n                                    null\n                                }\n                            </Comment>\n                    })\n                    :\n                    <Comment>\n                        <Comment.Text>No comments yet, leave the first one!</Comment.Text>\n                    </Comment>\n                } \n            </Comment.Group>\n            <DeleteCommentModal open={this.state.deleteOpen} toggle={this.toggleDelete} id={this.state.deletingId} deleteComment={this.deleteComment}/>\n            <WriteCommentModal open={this.state.editOpen} toggle={this.toggleEdit} handleOnSubmit={this.handleSubmit} value={this.state.editingContent} handleOnChange={this.handleChange} info='Editing' />\n            <WriteCommentModal toggle={this.toggleNew} open={this.state.open} handleOnSubmit={this.handleSubmit} value={this.state.content} handleOnChange={this.handleChange} info='New' />\n        </>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {user: state.user.user}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    fetchAuthentication: () => dispatch(fetchAuthentication())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentHolder);","import React from 'react'\nimport { Modal, Form, Button } from 'semantic-ui-react';\nimport BasicLoader from '../BasicLoader';\n\nconst AddPhotoModal = props => {\n    return <Modal onOpen={props.toggle} onClose={props.toggle} open={props.open} trigger={<Button icon='write' color='purple' content='New Photo' />} closeIcon>\n        <Modal.Header>New Photo</Modal.Header>\n        <Modal.Content>\n            <Modal.Description>\n                {props.loading ?\n                <BasicLoader info='image' />\n                :\n                <Form onSubmit={props.handleOnSubmit} className='standard-form' name='create'>\n                    <Form.Field>\n                        <Form.Input label='Photo' iconPosition='left' icon='image' type='file' accept='image/*' onChange={props.handleOnChange} name='photo' required />\n                    </Form.Field>\n                    <Button className='home-button' color='blue' type='submit' content='Add Photo' />\n                </Form>\n                }\n            </Modal.Description>\n        </Modal.Content>\n    </Modal>\n}\n\nexport default AddPhotoModal;","import React from 'react'\nimport { Modal, Button } from 'semantic-ui-react';\n\nconst AddPhotoModal = props => {\n    return <Modal onOpen={props.toggle} onClose={props.toggle} open={props.open} closeIcon>\n        <Modal.Header>Delete Photo</Modal.Header>\n        <Modal.Content>\n            <Modal.Description>\n                Are you sure?\n            </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n            <Button color='red' onClick={props.toggle} icon='remove' content='No' />\n            <Button color='green' onClick={() => props.deletePhoto(props.image)} icon='checkmark' content='Yes' />\n        </Modal.Actions>\n    </Modal>\n}\n\nexport default AddPhotoModal;","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Image, Comment, Button } from 'semantic-ui-react';\nimport { fetchAuthentication } from '../actions/userActions';\nimport { api } from '../services/api';\nimport BasicLoader from '../components/BasicLoader';\nimport AddPhotoModal from './photoModals/AddPhotoModal';\nimport DeletePhotoModal from './photoModals/DeletePhotoModal';\n\nclass PhotosHolder extends Component {\n\n    state = {\n        isLoading: false,\n        photos: [],\n        open: false,\n        deleteOpen: false,\n        deletingImage: {},\n        photoUrl: '',\n        newLoading: false\n    }\n\n    /* \n    After the component mounts to the DOM we want to verify the\n    user information so that we can properly associate a user with\n    their photos. We also want to then fetch all of the photos\n    associated with a trail\n    */\n    componentDidMount() {\n        this.props.fetchAuthentication()\n        this.fetchTrailPhotos()\n    }\n\n    // We want to update the photos if a user selects a different trail\n    componentDidUpdate(prevProps) {\n        if (this.props.trail.id !== prevProps.trail.id) {\n            this.fetchTrailPhotos()\n        }\n    }\n\n    // This function provides a loading indicator while fetching photos from our backend\n    fetchTrailPhotos = () => {\n        this.setState({isLoading: true})\n        api.photos.getPhotosByTrail(this.props.trail.id).then(json => this.setState({ photos: json, isLoading: false }))\n    }\n\n    // This toggles our new photo modal\n    toggleOpen = () => {\n        this.setState({open: !this.state.open})\n    }\n\n    // This toggles our delete photo modal\n    toggleDelete = image => {\n        this.setState({ \n            deleteOpen: !this.state.deleteOpen,\n            deletingImage: image\n        })\n    }\n\n    // Here we are able to capture the file input from the user so that we can upload the photo to AWS\n    handleChange = ev => {\n        this.setState({photoFileName: ev.target.files[0].name})\n        const reader = new FileReader()\n        reader.readAsDataURL(ev.target.files[0])\n        reader.onload = () => {\n            this.setState({\n                photoFile: reader.result\n            })\n        }\n    }\n\n    // Here we submit our photo and await a response. I added a loading indicator while the fetch is proceeding\n    handleSubmit = ev => {\n        ev.preventDefault()\n        this.setState({newLoading: true})\n        let image = { user_id: this.props.user.id, trail_id: this.props.trail.id, photo_file: this.state.photoFile, photo_file_name: this.state.photoFileName }\n        api.photos.addPhoto({image: image}).then(json => {\n            if (!json.error) {\n                this.toggleOpen()\n                this.setState({ photos: [...this.state.photos, json.image], newLoading: false })\n            }\n        })\n    }\n\n    // Here we are actually deleting a photo uploaded by a user\n    deletePhoto = image => {\n        api.photos.deletePhoto({ image: {id: image.id, img_url: image.img_url} }).then(this.setState({ photos: this.state.photos.filter(element => element.id !== image.id) }))\n        this.toggleDelete({ id: '' })\n    }\n\n    render() {\n        return <>\n            <Comment.Group>\n            {this.state.isLoading ?\n                <BasicLoader info='photos' />\n            :\n                this.state.photos.length > 0 ?\n                            this.state.photos.map((photo, idx) => {\n                                return <Comment key={idx}>\n                                    <Comment.Avatar src={photo.avatar} />\n                                    <Comment.Author as='a' content={photo.username} />\n                                    <Image src={photo.img_url} size='small' rounded/>\n                                    {photo.username === this.props.user.username ? \n                                        <Button className='delete-photo' size='mini' icon='trash alternate' negative onClick={() => this.toggleDelete(photo)} content='Delete' />\n                                    :\n                                        null\n                                    }\n                                </Comment>\n                            })\n                :\n                    <p>No photos yet, post the first one!</p>\n            }\n            </Comment.Group>\n            <DeletePhotoModal open={this.state.deleteOpen} toggle={this.toggleDelete} deletePhoto={this.deletePhoto} image={this.state.deletingImage}/>\n            <AddPhotoModal open={this.state.open} toggle={this.toggleOpen} handleOnChange={this.handleChange} handleOnSubmit={this.handleSubmit} loading={this.state.newLoading}/>\n        </>\n    }\n}\n\nconst mapStateToProps = state => {\n    return { user: state.user.user }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    fetchAuthentication: () => dispatch(fetchAuthentication())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhotosHolder);","import React from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport FavButton from '../components/buttons/FavButton';\nimport CompleteButton from '../components/buttons/CompleteButton';\nimport InfoHolder from '../components/InfoHolder';\nimport CommentHolder from './CommentHolder';\nimport PhotosHolder from '../components/PhotosHolder';\n\n\nconst SearchData = props => {\n\n    const displayMore = () => {\n        let component = null\n        let trail = ''\n        let name = ''\n        if (!props.comments.hidden) {\n            trail = props.trails.find(trail => trail.id === props.comments.id)\n            component = <CommentHolder trail={trail} />\n            name = 'Comments'\n        } else if (!props.info.hidden) {\n            trail = props.trails.find(trail => trail.id === props.info.id)\n            component = <InfoHolder trail={trail} />\n            name = trail.name\n        } else if (!props.photo.hidden) {\n            trail = props.trails.find(trail => trail.id === props.photo.id)\n            component = <PhotosHolder trail={trail} />\n            name = 'Photos'\n        } else {\n            return <div className='trail-holder'/>\n        }\n        return <Table>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell content={name} />\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                <Table.Row>\n                    <Table.Cell>{component}</Table.Cell>\n                </Table.Row>\n            </Table.Body>\n        </Table>\n    }\n\n    return props.trails && props.trails.length > 0 ?\n        <>\n        <Table striped className='search-table'>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell content='Name'/>\n                    <Table.HeaderCell content='Length'/>\n                    <Table.HeaderCell content='Condition'/>\n                    <Table.HeaderCell/>\n                    <Table.HeaderCell/>\n                    <Table.HeaderCell/>\n                    <Table.HeaderCell/>\n                    <Table.HeaderCell/>\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {props.trails.map(trail => {\n                    return <Table.Row key={trail.id}>\n                        <Table.Cell content={trail.name}/>\n                        <Table.Cell content={trail.length + 'miles'}/>\n                        <Table.Cell content={trail.conditionStatus}/>\n                        <Table.Cell><FavButton user={props.user} trail={trail} handleOnClick={props.handleClick} /></Table.Cell>\n                        <Table.Cell><CompleteButton user={props.user} trail={trail} handleOnClick={props.handleClick} /></Table.Cell>\n                        <Table.Cell><Button color='blue' name='comments' icon='comment alternate' content='Comments' onClick={(event) => props.handleClick(event, trail)} /></Table.Cell>\n                        <Table.Cell><Button color='blue' name='info' icon='info circle' content='More Info' onClick={(event) => props.handleClick(event, trail)} /></Table.Cell>\n                        <Table.Cell><Button color='blue' name='photos' icon='photo' content='Photos' onClick={(event) => props.handleClick(event, trail)} /></Table.Cell>\n                    </Table.Row>\n                })}\n            </Table.Body>\n        </Table>\n        {displayMore()}\n        </>\n        :\n        null\n}\n\nexport default SearchData;","import React, { Component} from 'react';\nimport { buttonSwitcher } from '../services/buttonSwitcher';\nimport SearchData from './SearchData';\n\n\nclass SearchResults extends Component {\n\n    state = {\n        info: {\n            id: '',\n            hidden: true\n        },\n        comments: {\n            id: '',\n            hidden: true\n        },\n        photos: {\n            id: '',\n            hidden: true\n        }\n    }\n\n    // This function will allow users to use the comments/more info buttons that appear in search data\n    handleClick = (ev, data) => {\n        if (data) {\n            let response = buttonSwitcher(ev, data, this.props)\n            if (response) {\n                // We want to only display one table at a time so we hide the others when a user clicks on a new button\n                this.setState({ info: { id: this.state.info.id, hidden: true }, comments: { id: this.state.comments.id, hidden: true }, photos: { id: this.state.photos.id, hidden: true } })\n                if (response[0] === 'info') {\n                    // We add this if statement so that if a user clicks the same button twice it closes the table\n                    if (response[1] === this.state.info.id) {\n                        this.setState({\n                            info: {\n                                id: '',\n                                hidden: true\n                            }\n                        })\n                    } else {\n                        this.setState({\n                            info: {\n                                id: response[1],\n                                hidden: false\n                            }\n                        })\n                    }\n                } else if (response[0] === 'comment') {\n                    if (response[1] === this.state.comments.id) {\n                        this.setState({\n                            comments: {\n                                id: '',\n                                hidden: true\n                            }\n                        })\n                    } else {\n                        this.setState({\n                            comments: {\n                                id: response[1],\n                                hidden: false\n                            }\n                        })\n                    }\n                } else if (response[0] === 'photo') {\n                    if (response[1] === this.state.photos.id) {\n                        this.setState({\n                            photos: {\n                                id: '',\n                                hidden: true\n                            }\n                        })\n                    } else {\n                        this.setState({\n                            photos: {\n                                id: response[1],\n                                hidden: false\n                            }\n                        })\n                    }\n                }\n                // Here we want to scroll the user to the bottom of the page where the new table is displayed\n                window.scrollTo(0, 20000)\n            }\n        }\n    }\n \n    render() {\n        return <>\n            <h1>Trail Info</h1>\n            <SearchData info={this.state.info} comments={this.state.comments} photo={this.state.photos} trails={this.props.trails} handleClick={this.handleClick} user={this.props.user} />\n        </>\n    }\n}\n\nexport default SearchResults;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SearchResults from '../containers/SearchResults';\nimport { api } from '../services/api';\nimport { fetchAuthentication } from '../actions/userActions';\nimport BasicLoader from './BasicLoader';\n\nclass UserTrailInfo extends Component {\n    state = {\n        trails: [],\n        isLoading: false,\n        info: {\n            id: '',\n            hidden: true\n        },\n        comments: {\n            id: '',\n            hidden: true\n        }\n    }\n\n    // Here we need to check which type of trails we are fetching and then fetch the appropriate type\n    componentDidMount() {\n        this.setState({ isLoading: true })\n        this.props.fetchAuthentication().then(this.props.hikes === 'completed' ? this.fetchCompletedTrails : this.fetchLikedTrails)\n    }\n\n    // We are using an and statement to prevent checking for user information before the props have loaded correctly\n    fetchLikedTrails = () => {\n        if (this.props.user && this.props.user.likes.length > 0) {\n            let trails = this.props.user.likes.map(like => like.trail_id)\n            api.trails.getTrailsById(trails).then(json => this.setState({ trails: json, isLoading: false }))\n        } else {\n            this.setState({isLoading: false})\n        }\n    }\n\n    // We map over the user's trail data and then get trails based on the id's of those trails\n    fetchCompletedTrails = () => {\n        if (this.props.user && this.props.user.completed_hikes.length > 0) {\n            let trails = this.props.user.completed_hikes.map(completed_hike => completed_hike.trail_id)\n            api.trails.getTrailsById(trails).then(json => this.setState({ trails: json, isLoading: false }))\n        } else {\n            this.setState({isLoading: false})\n        }\n    }\n\n    render() {\n        return this.state.isLoading ?\n            <BasicLoader info='Trails' />\n            :\n            this.state.trails.length > 0 ?\n                <div className='user-search-holder'>\n                    <SearchResults\n                        trails={this.state.trails}\n                        user={this.props.user}\n                    />\n                </div>\n            :\n                <p>You don't have any {this.props.hikes} trails!!</p>\n    }\n}\n\nconst mapStateToProps = state => {\n    return { user: state.user.user }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    fetchAuthentication: () => dispatch(fetchAuthentication())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserTrailInfo);","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport UserTrailInfo from './UserTrailInfo';\n\nconst Favorites = props => {\n    return <>\n        <h1>Your Favorite Trails</h1>\n        <UserTrailInfo hikes='liked'/>\n        <Button color='brown' icon='backward' onClick={() => props.history.push('/')} content='Go Back' />\n    </>\n}\n\nexport default Favorites;","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport UserTrailInfo from './UserTrailInfo';\n\nconst Trails = props => {\n    return <>\n        <h1>Your Completed Trails</h1>\n        <UserTrailInfo hikes='completed'/>\n        <Button color='brown' icon='backward' onClick={() => props.history.push('/')} content='Go Back' />\n    </>\n}\n\nexport default Trails;","import React from 'react'\nimport { Image, Icon, Card } from 'semantic-ui-react';\n\nconst MapMarker = props => {\n\n    // Here we want to either display a marker or hide one depending on whether we are currently showing this marker\n    const handleClick = ev => {\n        if (props.selectedTrail === props.trail.id && props.show) {\n            props.handleOnClick(null, ev)\n        } else {\n            props.handleOnClick(props.trail.id, ev)\n        }\n    }\n\n    // This function allows our x icon to close the marker\n    const handleClose = ev => {\n        props.handleOnClick(null, ev)\n    }\n\n    return <div className='marker-holder'>\n        <div className='map-marker' onClick={handleClick}>\n            {props.current ?\n                <Image src='https://img.icons8.com/color/2x/user-location.png' alt='user-marker' />\n                :\n                <Image src='https://img.icons8.com/dusk/2x/filled-flag.png' alt='map-marker' />\n            }\n        </div>\n        {props.$hover && props.selectedTrail !== props.trail.id ?\n            <div className='marker-info'>\n                <Card style={{zIndex: 3}}>\n                    <Card.Content>\n                        <Card.Header>\n                            {props.trail.name}\n                        </Card.Header>\n                    </Card.Content>\n                </Card>\n            </div>\n            :\n            null\n        }\n        { props.show && props.selectedTrail === props.trail.id ?\n            <div className='marker-info'>\n                <Card style={{ zIndex: 3 }}>\n                    {props.trail.imgMedium ?\n                        <Image style={{maxHeight: 150}} size='small' src={props.trail.imgMedium} alt={props.trail.name} />\n                        :\n                        null\n                    }\n                    <Card.Content>\n                        <Card.Header>\n                            {props.trail.name}\n                            <Icon name='cancel' style={{ cursor: 'pointer', float: 'right' }} onClick={handleClose} />\n                        </Card.Header>\n                    </Card.Content>\n                    {!props.current ?\n                        <>\n                        <Card.Description >\n                            {props.trail.summary === 'Needs Summary' || !props.trail.summary ?\n                                'No summary available'\n                            :\n                                props.trail.summary\n                            }\n                        </Card.Description>\n                        <Card.Content>\n                            <Card.Meta>\n                                Condition: {props.trail.conditionStatus || 'No condition available'}\n                            </Card.Meta>\n                            <Card.Meta>\n                                As of: {props.trail.conditionDate || 'No condition date available'}\n                            </Card.Meta>\n                        </Card.Content>\n                        </>\n                    :\n                        null\n                    }\n                </Card>\n            </div>\n            :\n            null\n        }\n    </div> \n}\n\nexport default MapMarker;","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport MapMarker from './MapMarker';\n\nconst GOOGLE_MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n\nclass GoogleMap extends Component {\n    static defaultProps = {\n        lat: 47.6062,\n        lng: -122.3321\n    }\n    // This is how we keep track of which hike preview is being displayed\n    state = {\n        showingInfoWindow: false,\n        selectedTrailId: null\n    }\n\n    // This function opens an info window when a user clicks on a map marker\n    onMarkerClick = (trailId, e) => {\n        this.setState({\n            selectedTrailId: trailId,\n            showingInfoWindow: true\n        });\n    }\n\n    // This function allows a user to click on the map and collapse their info window\n    onMapClicked = () => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                selectedTrailId: null\n            })\n        }\n    };\n\n    // This function maps over the trails for this map and returns markers to indicate each trail\n    displayTrails = () => {\n        return this.props.trails.map((trail, idx) => {\n            return <MapMarker\n                key={idx}\n                trail={trail}\n                lat={trail.latitude}\n                lng={trail.longitude}\n                handleOnClick={this.onMarkerClick}\n                show={this.state.showingInfoWindow}\n                selectedTrail={this.state.selectedTrailId}\n            />\n        })\n    }\n\n    render() {\n        return (\n            this.props.lat ?\n                <>\n                <h1>Map</h1>\n                <div style={{\n                    margin: 'auto',\n                    height: '90vh',\n                    width: '90%',\n                    zIndex: '1'\n                }}>\n                    <GoogleMapReact\n                        className='map-holder'\n                        bootstrapURLKeys={{ key: GOOGLE_MAPS_API_KEY }}\n                        defaultZoom={9}\n                        defaultCenter={{ lat: parseFloat(this.props.lat), lng: parseFloat(this.props.lng) }}\n                        onClick={this.onMapClicked}\n                    >\n                        <MapMarker\n                            lat={this.props.lat}\n                            lng={this.props.lng}\n                            trail={{ name: 'Selected Location', id: 1 }}\n                            show={this.state.showingInfoWindow}\n                            selectedTrail={this.state.selectedTrailId}\n                            current\n                            handleOnClick={this.onMarkerClick}\n                        />\n                        {this.displayTrails()}\n                    </GoogleMapReact>\n                </div>\n                </>\n                :\n                null\n        )\n    }\n}\n\nexport default GoogleMap;","import React, { Component } from 'react';\nimport { Form, Button, Label, Segment, Grid } from 'semantic-ui-react';\n\nclass TrailSearchForm extends Component {\n\n    state = {\n        latitude: '',\n        longitude: ''\n    }\n\n    // We need to keep track of what lat/long the user is entering but want the form to be controlled\n    handleChange = ev => {\n        this.setState({ \n            [ev.target.name]: ev.target.value\n        })\n    }\n\n    /*  Here we prevent default to prevent a page refresh,\n        submit to our parent component the selected location,\n        and then update our state to be cleared */\n    handleSubmit = ev => {\n        ev.preventDefault()\n        this.props.handleOnSubmit(ev, {...this.state})\n        this.setState({latitude: '', longitude: ''})\n    }\n\n    render() {\n        return <Grid columns={1}>\n            <Grid.Column>\n                <h1>Search by Coordinates</h1>\n                    <Form className='standard-form' onSubmit={this.handleSubmit}>\n                        <Segment stacked>\n                            <Form.Group widths='equal'>\n                                <Form.Field>\n                                    <Label color='brown' as='a' icon='map marker' content='Latitude' />\n                                    <Form.Input type='number' value={this.state.latitude} onChange={this.handleChange} name='latitude' placeholder='Enter a latitude' required />\n                                </Form.Field>\n                                <Form.Field>\n                                    <Label color='brown' as='a' icon='map marker alternate' content='Longitude' />\n                                    <Form.Input type='number' value={this.state.longitude} onChange={this.handleChange} name='longitude' placeholder='Enter a longitude' required />\n                                </Form.Field>\n                            </Form.Group>\n                            <Button fluid color='blue' type='submit' content='Search' />\n                        </Segment>\n                    </Form>\n            </Grid.Column>\n        </Grid>\n    }\n}\n\nexport default TrailSearchForm;","import React from 'react'\nimport { Modal, Button, Form, Label } from 'semantic-ui-react';\n\n// Here are the options for the select menu\nconst options = [\n    { key: 10, text: 'Ten', value: 10},\n    { key: 20, text: 'Twenty', value: 20},\n    { key: 30, text: 'Thirty', value: 30},\n    { key: 40, text: 'Fourty', value: 40},\n    { key: 50, text: 'Fifty', value: 50},\n]\n\nconst SearchSettingsModal = props => {\n    return <Modal onOpen={props.toggle} onClose={props.toggle} open={props.open} trigger={<Button className='home-button' icon='settings' color='green' content='Settings' />} closeIcon>\n        <Modal.Header content='Search Settings' />\n        <Modal.Content>\n            <Modal.Description>\n                <Form onSubmit={props.handleOnSubmit} className='standard-form' name='settings'>\n                    <Form.Group widths='equal'>\n                        <Form.Field className='modal-form'>\n                            <Label color='brown' as='a' icon='bicycle' content='Range (miles)' />\n                            <Form.Select value={props.range} onChange={props.handleOnChange} options={options} name='distance' placeholder='Select a range' selection required />\n                        </Form.Field>\n                        <Form.Field className='modal-form'>\n                            <Label color='brown' as='a' icon='flag' content='Results (trails)' />\n                            <Form.Select value={props.results} onChange={props.handleOnChange} options={options} name='results' placeholder='Select the number of trails' selection required />\n                        </Form.Field>\n                    </Form.Group>\n                    <Button className='home-button' color='blue' type='submit' content='Save' />\n                </Form>\n            </Modal.Description>\n        </Modal.Content>\n    </Modal>\n}\n\nexport default SearchSettingsModal;","import React, { Component } from 'react';\nimport { Button, Dropdown } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { api } from '../services/api';\nimport { fetchAuthentication } from '../actions/userActions';\nimport GoogleMap from './GoogleMap'\nimport SearchResults from '../containers/SearchResults';\nimport TrailSearchForm from './TrailSearchForm';\nimport BasicLoader from './BasicLoader';\nimport SearchSettingsModal from './searchModals/SearchSettingsModal';\n\nclass Search extends Component {\n\n    state = {\n        locations: [],\n        trails: [],\n        selectedLocation: {\n            lat: '',\n            lng: ''\n        },\n        isLoading: true,\n        mapLoading: false,\n        open: false,\n        distance: '',\n        results: ''\n    }\n\n    // I need to fetch the preset locations from my backend and get the user data from redux\n    componentDidMount() {\n        api.locations.getLocations().then(json => this.setState({locations: json, isLoading: false}))\n        this.props.fetchAuthentication()\n    }\n\n    // This function clears out whatever state the user searched for prior and searches anew given a location\n    handleClick = (ev, location) => {\n        this.setState({\n            trails: [], selectedLocation: {\n                lat: '',\n                lng: ''\n            }, mapLoading: true\n        })\n        let lat = location.latitude\n        let lon = location.longitude\n        // This allows the search settings to override a user's settings\n        let distance = this.state.distance || this.props.user.distance\n        let results = this.state.results || this.props.user.results\n        api.trails.getTrailsByLocation(lat, lon, distance, results).then(json => this.setState({\n            trails: json,\n            selectedLocation: {\n                lat: lat,\n                lng: lon\n            },\n            mapLoading: false\n        }))\n    }\n\n    // All of these three functions are used to manage the search settings modal\n    toggle = () => {\n        this.setState({open: !this.state.open})\n    }\n\n    handleChange = (ev, value) => {\n        this.setState({\n            [value.name]: value.value\n        })\n    }\n\n    handleSubmit = ev => {\n        ev.preventDefault()\n        this.toggle()\n    }\n\n    render() {\n        return <>\n            <h1>Search</h1>\n            {this.state.isLoading ? \n                <BasicLoader info='Locations' />\n            :\n                <Dropdown\n                    placeholder='Select a location'\n                    selection\n                    options={this.state.locations.map(location => {\n                        return {\n                            key: location.id,\n                            id: location.id,\n                            value: location.name,\n                            icon: 'map signs',\n                            content: location.name + ', ' + location.state,\n                            onClick: (event) => this.handleClick(event, location)\n                        }\n                    })}\n                />\n            }\n            <SearchSettingsModal open={this.state.open} toggle={this.toggle} range={this.state.distance} results={this.state.results} handleOnChange={this.handleChange} handleOnSubmit={this.handleSubmit} />\n            <TrailSearchForm handleOnSubmit={this.handleClick} />\n            {this.state.mapLoading ? \n                <BasicLoader info='Trails' />\n            :\n                <GoogleMap lat={this.state.selectedLocation.lat} lng={this.state.selectedLocation.lng} trails={this.state.trails} />\n            }\n            {// This ternary checks to see if we have updated our trails before rendering either trail results or no trail results depending on search data\n            this.state.trails && this.state.trails.length > 0 ?\n                <SearchResults trails={this.state.trails} user={this.props.user} />\n            :\n                this.state.selectedLocation.lat ?\n                    <p>There are no trails near {this.state.selectedLocation.lat + ' latitude'} {this.state.selectedLocation.lng + ' longitude'}</p>\n                :\n                    null\n            }\n            <Button className='search-back-button' color='brown' icon='backward' onClick={() => this.props.history.push('/')} content='Go Back' />\n        </>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {user: state.user.user}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    fetchAuthentication: () => dispatch(fetchAuthentication())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import React, { useState, useEffect } from 'react'\nimport { Button, Image } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { fetchAuthentication } from '../actions/userActions';\nimport SearchResults from '../containers/SearchResults';\nimport GoogleMap from '../components/GoogleMap';\nimport { api } from '../services/api';\nimport BasicLoader from './BasicLoader';\nimport SearchSettingsModal from './searchModals/SearchSettingsModal';\nimport ErrorModal from './auth/ErrorModal';\n\n\nconst WelcomePage = props => {\n\n    // Here we are using hooks to imitate state because this is a functional component\n    const [trails, setTrails] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [lat, setLat] = useState('')\n    const [long, setLong] = useState('')\n    const [distance, setDistance] = useState('')\n    const [results, setResults] = useState('')\n    const [open, setOpen] = useState(false)\n    const [warningOpen, setWarningOpen] = useState(false)\n    const [error, setError] = useState('')\n\n    // This function will reset our lat/long if they exist and then use the geolocation feature to update the lat/long with a user's geolocation data\n    const getLocation = () => {\n        props.fetchAuthentication()\n        if (lat && long) {\n            setTrails([])\n            setLat('')\n            setLong('')\n        } else {\n            setLoading(true)\n            if (\"geolocation\" in navigator) {\n                navigator.geolocation.getCurrentPosition(logPostition, positionError)\n            } else {\n                setError('Geolocation is not supported in your browser')\n                setWarningOpen(true)\n                setLoading(false)\n            }\n        }\n    }\n\n    // This function sets the state of lat/long with data from the geolocation feature\n    const logPostition = (position) => {\n        setLat(position.coords.latitude)\n        setLong(position.coords.longitude)\n    }\n\n    // This is our callback function to when we get an error from the geolocation API\n    const positionError = () => {\n        setError('Sorry, we were unable to retrieve your location')\n        setWarningOpen(true)\n        setLoading(false)\n    }\n\n    // These three functions all manage the search settings modal and update the hooks appropriately\n    const handleChange = (ev, value )  => {\n        if (value.name === 'distance') {\n            setDistance(value.value)\n        } else if (value.name === 'results') {\n            setResults(value.value)\n        }\n    }\n\n    // When a user submits the search settings form we want to close the modal\n    const handleSubmit = ev => {\n        ev.preventDefault()\n        toggle()\n    }\n\n    // These are our modal toggle functions\n    const toggle = () => {\n        setOpen(!open)\n    }\n\n    const toggleWarning = () => {\n        setWarningOpen(!warningOpen)\n    }\n\n    // This function will perform a fetch once the lat/long have been updated or when the props get updated\n    // useEffect is similar to a componentdidmount/update and allows us to perform actions based on the state updating\n    useEffect(() => {\n        if (lat && long && props.user) {\n            let searchDistance = distance || props.user.distance\n            let searchResults = results || props.user.results\n            api.trails.getTrailsByLocation(lat, long, searchDistance, searchResults).then(json => setTrails(json)).then(setLoading(false))\n        }\n    }, [lat, long, props, distance, results])\n\n    return <>\n        <h1>My Trails</h1>\n        <Image size='big' className='home-image' src='https://images.freeimages.com/images/large-previews/c27/mount-rainier-1337100.jpg' alt='mount-rainier' />\n        <SearchSettingsModal open={open} toggle={toggle} range={distance} results={results} handleOnChange={handleChange} handleOnSubmit={handleSubmit} />\n        <ErrorModal open={warningOpen} toggle={toggleWarning} error={error} />\n        <Button className='home-button' onClick={getLocation} icon='location arrow' color='brown' content='Hikes Near Me!' />\n        {loading ? \n            <BasicLoader info='Trails' /> \n        :   \n        trails.length > 0 ?\n            <>\n                <GoogleMap lat={lat} lng={long} trails={trails} />\n                <SearchResults trails={trails} user={props.user} />\n            </>\n        :\n            null\n        }\n    </>\n}\n\nconst mapStateToProps = state => {\n    return {user: state.user.user}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    fetchAuthentication: () => dispatch(fetchAuthentication())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WelcomePage);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { HashRouter as Router, Route, NavLink, Redirect } from 'react-router-dom';\nimport { Menu, Dropdown } from 'semantic-ui-react';\nimport Account from '../components/Account';\nimport About from '../components/About';\nimport Favorites from '../components/Favorites';\nimport Trails from '../components/Trails';\nimport Search from '../components/Search';\nimport WelcomePage from '../components/WelcomePage';\n\nconst HomeContainer = props => {\n\n    // This function will send an action to the redux store which will remove our user information\n    const logout = () => {\n        props.logout()\n    }\n\n    // These options are for the dropdown menu in the navmenu\n    const options = [\n        <Dropdown.Item key='1' icon='settings' as={NavLink} exact to='/account' activeClassName='active' text='Edit'/>,\n        <Dropdown.Item key='2' icon='grav' as={NavLink} exact to='/about' activeClassName='active' text='About'/>,\n        <Dropdown.Item key='3' icon='sign out alternate' text='Logout' onClick={logout}/>\n    ]\n    \n    return <Router>\n        <Menu fixed='top' fluid widths={4} pointing color='teal'>\n            <Dropdown text='Account' item direction='left' options={options} />\n            <Menu.Item icon='like' as={NavLink} exact to='/favorites' activeClassName='active' name='Favs' />\n            <Menu.Item icon='map' as={NavLink} exact to='/hikes' activeClassName='active' name='Trails' />\n            <Menu.Item icon='search' as={NavLink} exact to='/search' activeClassName='active' name='Search' />\n        </Menu>\n        <Route path='/' exact component={WelcomePage} />\n        <Route path='/account' exact render={props => <Account {...props} />} />\n        <Route path='/about' exact render={props => <About {...props} />} />\n        <Route path='/favorites' exact render={props => <Favorites {...props} />} />\n        <Route path='/hikes' exact render={props => <Trails {...props} />} />\n        <Route path='/search' exact render={props => <Search {...props} />} />\n        <Redirect from='*' to='/'/>\n    </Router>\n}\n\nconst mapDispatchToProps = dispatch => ({\n    logout: () => dispatch({ type: 'LOGOUT' })\n})\n\nexport default connect(null, mapDispatchToProps)(HomeContainer);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport User from './containers/UserContainer'\nimport Home from './containers/HomeContainer'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        {localStorage.getItem('token') ?\n            <Home/>\n          :\n            <User/>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {user: state.user}\n}\n\nexport default connect(mapStateToProps)(App);\n","const initialState = {}\n\nconst manageUser = (state = initialState, action) => {\n    let user = action.payload\n    switch (action.type) {\n        case 'SIGNUP':\n            return { ...state, user }\n        case 'LOGIN':\n            return {...state, user }\n        case 'AUTHENTICATE':\n            return {...state, user }\n        case 'EDIT':\n            return {...state, user }\n        case 'ERROR':\n            return {...state, error: user}\n        case 'CLEARERROR':\n            return {...state, error: null}\n        case 'LOGOUT':\n            localStorage.clear()\n            return {...state, user: {}}\n        default:\n            return state\n    }\n}\n\nexport default manageUser","const initialState = []\n\nconst manageAvatars = (state = initialState, action) => {\n    let avatars = action.payload\n    switch (action.type) {\n        case 'AVATARS':\n            return avatars\n        default:\n            return state\n    }\n}\n\nexport default manageAvatars","const initialState = []\n\nconst manageFavorites = (state = initialState, action) => {\n    let favorites = action.payload\n    switch (action.type) {\n        case 'GETFAVORITES':\n            return favorites\n        case 'DELETEFAVORITES':\n            return initialState\n        default:\n            return state\n    }\n}\n\nexport default manageFavorites","const initialState = []\n\nconst manageCompletedHikes = (state = initialState, action) => {\n    let completedHikes = action.payload\n    switch (action.type) {\n        case 'GETCOMPLETEDHIKES':\n            return completedHikes\n        case 'DELETECOMPLETEDHIKES':\n            return initialState\n        default:\n            return state\n    }\n}\n\nexport default manageCompletedHikes","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore, combineReducers, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport manageUser from './reducers/manageUser';\nimport manageAvatars from './reducers/manageAvatars';\nimport manageFavorites from './reducers/manageFavorites';\nimport manageCompletedHikes from './reducers/manageCompletedHikes';\n\n// This is the setup for our redux store, the compose enhancers function is used to allow redux dev tools if applicable but not break the app otherwise\nconst rootReducer = combineReducers({user: manageUser, avatars: manageAvatars, favorites: manageFavorites, completedHikes: manageCompletedHikes})\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(applyMiddleware(thunk))\nconst store = createStore(rootReducer, enhancer)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\ndocument.getElementById('root'));\n"],"sourceRoot":""}